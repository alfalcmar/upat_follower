<launch>
    <arg name="multi" default="true"/>
    <arg name="robot_model" default="iris"/>
    <arg name="ns_prefix" default="uav_"/>
    <arg name="mode" default="sitl"/>
    <arg name="pose_frame_id" default=""/>
    <!-- To publish ual/pose in other frame than local, e.g. map -->
    <arg name="ual_server" default="on"/>
    <arg name="ual_pub_rate" default="30.0"/>
    <arg name="mavros_offboard_rate" default="30.0"/>

    <group if="$(eval mode=='sitl')">
        <!-- Launch Gazebo simulation -->
        <rosparam param="/use_sim_time">true</rosparam>
        <node pkg="px4_bringup" type="launch_gzworld.py" name="gazebo_world" output="screen" args="-physics=ode -world=$(find px4_bringup)/config/empty_light.world">
            <rosparam param="sim_origin">[37.558542, -5.931074, 7.89]</rosparam>            <!-- [lat,lon,alt] -->
        </node>
    </group>

    <!-- Launch robots. Argument mode can be:
        - sitl: for software in the loop simulation
        - serial: for serial connection to px4
        - udp: for udp connection to px4
    -->
    <!-- Launch robot id=1 -->
    <include file="$(find px4_bringup)/launch/spawn_robot.launch" ns="$(arg ns_prefix)1">
        <arg name="robot_model" value="$(arg robot_model)"/>
        <arg name="id" value="1"/>
        <arg name="material" value="Orange"/>
        <arg name="mode" value="$(arg mode)"/>
        <arg name="x" value="0"/>
        <arg name="y" value="5"/>
        <arg name="z" value="0"/>
        <arg name="yaw" value="0"/>
    </include>

    <group if="$(arg multi)">
        <!-- Launch robot id=2 -->
        <include file="$(find px4_bringup)/launch/spawn_robot.launch" ns="$(arg ns_prefix)2">
            <arg name="robot_model" value="$(arg robot_model)"/>
            <arg name="id" value="2"/>
            <arg name="material" value="Indigo"/>
            <arg name="mode" value="$(arg mode)"/>
            <arg name="x" value="0"/>
            <arg name="y" value="-5"/>
            <arg name="z" value="0"/>
            <arg name="yaw" value="0"/>
        </include>
    </group>

    <!-- Launch UAL server for uav id=1 -->
    <node pkg="uav_abstraction_layer" type="server" name="ual" ns="$(arg ns_prefix)1" output="screen">
        <param name="uav_id" value="1"/>
        <param name="pose_frame_id" value="$(arg pose_frame_id)"/>
        <param name="ual_server" value="$(arg ual_server)"/>
        <param name="ual_pub_rate" value="$(arg ual_pub_rate)"/>
        <param name="mavros_offboard_rate" value="$(arg mavros_offboard_rate)"/>
        <param name="home_pose_parent_frame" value="map"/>
        <!-- default= map -->
        <!-- Define home pose relative to global map frame -->
        <rosparam param="home_pose">[0, 5, 0]</rosparam>        <!-- [x,y,z] -->
        <!-- Define the global map frame geo position and let the UAL estimate the relative home pose -->
        <!-- <rosparam param="map_origin_geo">[37.558542, -5.931074, 7.89]</rosparam> -->        <!-- [lat,lon,alt] -->
    </node>

    <group if="$(arg multi)">
        <!-- Launch UAL server for uav id=2 -->
        <node pkg="uav_abstraction_layer" type="server" name="ual" ns="$(arg ns_prefix)2" output="screen">
            <param name="uav_id" value="2"/>
            <param name="pose_frame_id" value="$(arg pose_frame_id)"/>
            <param name="ual_server" value="$(arg ual_server)"/>
            <param name="ual_pub_rate" value="$(arg ual_pub_rate)"/>
            <param name="mavros_offboard_rate" value="$(arg mavros_offboard_rate)"/>
            <param name="home_pose_parent_frame" value="map"/>
            <!-- default= map -->
            <!-- Define home pose relative to global map frame -->
            <rosparam param="home_pose">[0, -5, 0]</rosparam>            <!-- [x,y,z] -->
            <!-- Define the global map frame geo position and let the UAL estimate the relative home pose -->
            <!-- <rosparam param="map_origin_geo">[37.558542, -5.931074, 7.89]</rosparam> -->            <!-- [lat,lon,alt] -->
        </node>
    </group>
</launch>