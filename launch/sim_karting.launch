<launch>
    <!-- Arguments -->
    <arg name="mode" default="sitl"/>
    <arg name="ns_prefix" default="uav_"/>
    <arg name="robot_model" default="mbzirc"/>
    <arg name="pub_rate" default="30.0"/>
    <arg name="debug" default="false"/>
    <arg name="save_test_data" default="false"/>
    <arg name="save_experiment_data" default="false"/>
    <arg name="trajectory" default="false"/>
    <arg name="reach_tolerance" default="0.1"/>
    <arg name="path" default="cubic"/>
    <arg name="generator_mode" default="0"/>
    <arg name="pkg_name" default="upat_follower"/>
    <arg name="use_class" default="true"/>
    <arg name="multi" default="false"/>
    <arg name="ual_server" default="on"/>
    <arg name="ual_pub_rate" default="30.0"/>
    <arg name="pose_frame_id" default=""/>
    <arg name="mavros_offboard_rate" default="30.0"/>
    <arg name="position_th" default="0.33"/>
    <arg name="orientation_th" default="0.65"/>
    <arg name="hold_pose_time" default="3.0"/>

    <node pkg="rviz" type="rviz" name="rviz_node" args="-d $(find upat_follower)/config/rviz/mision.rviz" required="true"/>

    <!-- Launch Gazebo simulation -->
    <rosparam param="/use_sim_time">true</rosparam>
    <node pkg="px4_bringup" type="launch_gzworld.py" name="gazebo_world" output="screen" args="-physics=ode -world=$(find upat_follower)/config/experiments/worlds/karting_sevilla.world -add_model_path=$(find upat_follower)/config/experiments/models -description_package=robots_description">
        <rosparam param="sim_origin">[37.558542, -5.931074, 7.89]</rosparam>        <!-- [lat,lon,alt] -->
    </node>

    <!-- Launch robot id=1 -->
    <include file="$(find px4_bringup)/launch/spawn_robot.launch" ns="$(arg ns_prefix)1">
        <arg name="id" value="1"/>
        <arg name="material" value="Orange"/>
        <arg name="mode" value="$(arg mode)"/>
        <arg name="x" value="-32.11"/>
        <arg name="y" value="4.01"/>
        <arg name="z" value="0"/>
        <arg name="yaw" value="0"/>
        <arg name="robot_model" value="$(arg robot_model)"/>
    </include>
    <!-- Launch robot id=2 -->
    <include file="$(find px4_bringup)/launch/spawn_robot.launch" ns="$(arg ns_prefix)2" if="$(arg multi)">
        <arg name="id" value="2"/>
        <arg name="material" value="Blue"/>
        <arg name="mode" value="$(arg mode)"/>
        <arg name="x" value="-32.11"/>
        <arg name="y" value="14.01"/>
        <arg name="z" value="0"/>
        <arg name="yaw" value="0"/>
        <arg name="robot_model" value="$(arg robot_model)"/>
    </include>

    <!-- Launch UAL server for uav id=1 -->
    <node pkg="ual_backend_mavros" type="ual_backend_mavros_server" name="ual" ns="$(arg ns_prefix)1" output="screen">
        <param name="uav_id" value="1"/>
        <param name="ual_server" value="$(arg ual_server)"/>
        <param name="ual_pub_rate" value="$(arg ual_pub_rate)"/>
        <param name="mavros_offboard_rate" value="$(arg mavros_offboard_rate)"/>
        <param name="position_th" value="$(arg position_th)"/>
        <param name="orientation_th" value="$(arg orientation_th)"/>
        <param name="hold_pose_time" value="$(arg hold_pose_time)"/>
        <param name="pose_frame_id" value="$(arg pose_frame_id)"/>
        <param name="home_pose_parent_frame" value="map"/>
        <!-- default= map -->
        <!-- Define home pose relative to global map frame -->
        <rosparam param="home_pose">[-32.11, 4.01, 0]</rosparam>        <!-- [x,y,z] -->
        <!-- Define the global map frame geo position and let the UAL estimate the relative home pose -->
        <!-- <rosparam param="map_origin_geo">[37.558542, -5.931074, 7.89]</rosparam> -->        <!-- [lat,lon,alt] -->
    </node>
    <!-- Launch UAL server for uav id=1 -->
    <node pkg="ual_backend_mavros" type="ual_backend_mavros_server" name="ual" ns="$(arg ns_prefix)2" output="screen" if="$(arg multi)">
        <param name="uav_id" value="2"/>
        <param name="ual_server" value="$(arg ual_server)"/>
        <param name="ual_pub_rate" value="$(arg ual_pub_rate)"/>
        <param name="mavros_offboard_rate" value="$(arg mavros_offboard_rate)"/>
        <param name="position_th" value="$(arg position_th)"/>
        <param name="orientation_th" value="$(arg orientation_th)"/>
        <param name="hold_pose_time" value="$(arg hold_pose_time)"/>
        <param name="pose_frame_id" value="$(arg pose_frame_id)"/>
        <param name="home_pose_parent_frame" value="map"/>
        <!-- default= map -->
        <!-- Define home pose relative to global map frame -->
        <rosparam param="home_pose">[-32.11, 14.01, 0]</rosparam>        <!-- [x,y,z] -->
        <!-- Define the global map frame geo position and let the UAL estimate the relative home pose -->
        <!-- <rosparam param="map_origin_geo">[37.558542, -5.931074, 7.89]</rosparam> -->        <!-- [lat,lon,alt] -->
    </node>

    <!-- UAV Path Manager nodes -->
    <group ns="upat_follower">
        <group ns="$(arg ns_prefix)1">
            <node pkg="upat_follower" type="ual_communication_node" name="ual_communication" output="screen" required="true">
                <param name="uav_id" value="1"/>
                <param name="ns_prefix" value="$(arg ns_prefix)"/>
                <param name="save_test_data" value="false"/>
                <param name="trajectory" value="$(arg trajectory)"/>
                <param name="pub_rate" value="$(arg pub_rate)"/>
                <param name="path" value="$(arg path)"/>
                <param name="reach_tolerance" value="$(arg reach_tolerance)"/>
                <param name="use_class" value="true"/>
                <param name="generator_mode" value="$(arg generator_mode)"/>
                <param name="debug" value="$(arg debug)"/>
            </node>
            <node pkg="upat_follower" type="visualization_node" name="visualization" required="true" output="screen">
                <param name="uav_id" value="1"/>
                <param name="ns_prefix" value="$(arg ns_prefix)"/>
                <param name="robot_model" value="$(arg robot_model)"/>
                <param name="pub_rate" value="$(arg pub_rate)"/>
                <param name="save_experiment_data" value="$(arg save_experiment_data)"/>
                <param name="trajectory" value="$(arg trajectory)"/>
                <param name="generator_mode" value="$(arg generator_mode)"/>
            </node>
        </group>
        <group ns="$(arg ns_prefix)2" if="$(arg multi)">
            <node pkg="upat_follower" type="ual_communication_node" name="ual_communication" output="screen" required="true">
                <param name="uav_id" value="2"/>
                <param name="ns_prefix" value="$(arg ns_prefix)"/>
                <param name="save_test_data" value="false"/>
                <param name="trajectory" value="$(arg trajectory)"/>
                <param name="pub_rate" value="$(arg pub_rate)"/>
                <param name="path" value="$(arg path)"/>
                <param name="reach_tolerance" value="$(arg reach_tolerance)"/>
                <param name="use_class" value="true"/>
                <param name="generator_mode" value="$(arg generator_mode)"/>
                <param name="debug" value="$(arg debug)"/>
            </node>
            <node pkg="upat_follower" type="visualization_node" name="visualization" required="true" output="screen">
                <param name="uav_id" value="2"/>
                <param name="ns_prefix" value="$(arg ns_prefix)"/>
                <param name="robot_model" value="$(arg robot_model)"/>
                <param name="pub_rate" value="$(arg pub_rate)"/>
                <param name="save_experiment_data" value="$(arg save_experiment_data)"/>
                <param name="trajectory" value="$(arg trajectory)"/>
                <param name="generator_mode" value="$(arg generator_mode)"/>
            </node>
        </group>
    </group>


</launch>



